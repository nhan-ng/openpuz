// source: coordinator/v1/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.openpuz.coordinator.v1.CreateLobbyRequest', null, global);
goog.exportSymbol('proto.openpuz.coordinator.v1.CreateLobbyResponse', null, global);
goog.exportSymbol('proto.openpuz.coordinator.v1.GameType', null, global);
goog.exportSymbol('proto.openpuz.coordinator.v1.Lobby', null, global);
goog.exportSymbol('proto.openpuz.coordinator.v1.LobbyPort', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openpuz.coordinator.v1.CreateLobbyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openpuz.coordinator.v1.CreateLobbyRequest.displayName = 'proto.openpuz.coordinator.v1.CreateLobbyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openpuz.coordinator.v1.CreateLobbyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openpuz.coordinator.v1.CreateLobbyResponse.displayName = 'proto.openpuz.coordinator.v1.CreateLobbyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openpuz.coordinator.v1.Lobby = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openpuz.coordinator.v1.Lobby.repeatedFields_, null);
};
goog.inherits(proto.openpuz.coordinator.v1.Lobby, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openpuz.coordinator.v1.Lobby.displayName = 'proto.openpuz.coordinator.v1.Lobby';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openpuz.coordinator.v1.LobbyPort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openpuz.coordinator.v1.LobbyPort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openpuz.coordinator.v1.LobbyPort.displayName = 'proto.openpuz.coordinator.v1.LobbyPort';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openpuz.coordinator.v1.CreateLobbyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openpuz.coordinator.v1.CreateLobbyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openpuz.coordinator.v1.CreateLobbyRequest}
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openpuz.coordinator.v1.CreateLobbyRequest;
  return proto.openpuz.coordinator.v1.CreateLobbyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openpuz.coordinator.v1.CreateLobbyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openpuz.coordinator.v1.CreateLobbyRequest}
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openpuz.coordinator.v1.GameType} */ (reader.readEnum());
      msg.setGameType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openpuz.coordinator.v1.CreateLobbyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openpuz.coordinator.v1.CreateLobbyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional GameType game_type = 1;
 * @return {!proto.openpuz.coordinator.v1.GameType}
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.prototype.getGameType = function() {
  return /** @type {!proto.openpuz.coordinator.v1.GameType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openpuz.coordinator.v1.GameType} value
 * @return {!proto.openpuz.coordinator.v1.CreateLobbyRequest} returns this
 */
proto.openpuz.coordinator.v1.CreateLobbyRequest.prototype.setGameType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openpuz.coordinator.v1.CreateLobbyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openpuz.coordinator.v1.CreateLobbyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lobby: (f = msg.getLobby()) && proto.openpuz.coordinator.v1.Lobby.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openpuz.coordinator.v1.CreateLobbyResponse}
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openpuz.coordinator.v1.CreateLobbyResponse;
  return proto.openpuz.coordinator.v1.CreateLobbyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openpuz.coordinator.v1.CreateLobbyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openpuz.coordinator.v1.CreateLobbyResponse}
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openpuz.coordinator.v1.Lobby;
      reader.readMessage(value,proto.openpuz.coordinator.v1.Lobby.deserializeBinaryFromReader);
      msg.setLobby(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openpuz.coordinator.v1.CreateLobbyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openpuz.coordinator.v1.CreateLobbyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLobby();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openpuz.coordinator.v1.Lobby.serializeBinaryToWriter
    );
  }
};


/**
 * optional Lobby lobby = 1;
 * @return {?proto.openpuz.coordinator.v1.Lobby}
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.prototype.getLobby = function() {
  return /** @type{?proto.openpuz.coordinator.v1.Lobby} */ (
    jspb.Message.getWrapperField(this, proto.openpuz.coordinator.v1.Lobby, 1));
};


/**
 * @param {?proto.openpuz.coordinator.v1.Lobby|undefined} value
 * @return {!proto.openpuz.coordinator.v1.CreateLobbyResponse} returns this
*/
proto.openpuz.coordinator.v1.CreateLobbyResponse.prototype.setLobby = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openpuz.coordinator.v1.CreateLobbyResponse} returns this
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.prototype.clearLobby = function() {
  return this.setLobby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openpuz.coordinator.v1.CreateLobbyResponse.prototype.hasLobby = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openpuz.coordinator.v1.Lobby.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.toObject = function(opt_includeInstance) {
  return proto.openpuz.coordinator.v1.Lobby.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openpuz.coordinator.v1.Lobby} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.Lobby.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    portsList: jspb.Message.toObjectList(msg.getPortsList(),
    proto.openpuz.coordinator.v1.LobbyPort.toObject, includeInstance),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nodeName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openpuz.coordinator.v1.Lobby}
 */
proto.openpuz.coordinator.v1.Lobby.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openpuz.coordinator.v1.Lobby;
  return proto.openpuz.coordinator.v1.Lobby.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openpuz.coordinator.v1.Lobby} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openpuz.coordinator.v1.Lobby}
 */
proto.openpuz.coordinator.v1.Lobby.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.openpuz.coordinator.v1.GameType} */ (reader.readEnum());
      msg.setGameType(value);
      break;
    case 3:
      var value = new proto.openpuz.coordinator.v1.LobbyPort;
      reader.readMessage(value,proto.openpuz.coordinator.v1.LobbyPort.deserializeBinaryFromReader);
      msg.addPorts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openpuz.coordinator.v1.Lobby.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openpuz.coordinator.v1.Lobby} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.Lobby.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPortsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openpuz.coordinator.v1.LobbyPort.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openpuz.coordinator.v1.Lobby} returns this
 */
proto.openpuz.coordinator.v1.Lobby.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GameType game_type = 2;
 * @return {!proto.openpuz.coordinator.v1.GameType}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.getGameType = function() {
  return /** @type {!proto.openpuz.coordinator.v1.GameType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openpuz.coordinator.v1.GameType} value
 * @return {!proto.openpuz.coordinator.v1.Lobby} returns this
 */
proto.openpuz.coordinator.v1.Lobby.prototype.setGameType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated LobbyPort ports = 3;
 * @return {!Array<!proto.openpuz.coordinator.v1.LobbyPort>}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.getPortsList = function() {
  return /** @type{!Array<!proto.openpuz.coordinator.v1.LobbyPort>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openpuz.coordinator.v1.LobbyPort, 3));
};


/**
 * @param {!Array<!proto.openpuz.coordinator.v1.LobbyPort>} value
 * @return {!proto.openpuz.coordinator.v1.Lobby} returns this
*/
proto.openpuz.coordinator.v1.Lobby.prototype.setPortsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openpuz.coordinator.v1.LobbyPort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openpuz.coordinator.v1.LobbyPort}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.addPorts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openpuz.coordinator.v1.LobbyPort, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openpuz.coordinator.v1.Lobby} returns this
 */
proto.openpuz.coordinator.v1.Lobby.prototype.clearPortsList = function() {
  return this.setPortsList([]);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openpuz.coordinator.v1.Lobby} returns this
 */
proto.openpuz.coordinator.v1.Lobby.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string node_name = 5;
 * @return {string}
 */
proto.openpuz.coordinator.v1.Lobby.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.openpuz.coordinator.v1.Lobby} returns this
 */
proto.openpuz.coordinator.v1.Lobby.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openpuz.coordinator.v1.LobbyPort.prototype.toObject = function(opt_includeInstance) {
  return proto.openpuz.coordinator.v1.LobbyPort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openpuz.coordinator.v1.LobbyPort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.LobbyPort.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openpuz.coordinator.v1.LobbyPort}
 */
proto.openpuz.coordinator.v1.LobbyPort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openpuz.coordinator.v1.LobbyPort;
  return proto.openpuz.coordinator.v1.LobbyPort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openpuz.coordinator.v1.LobbyPort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openpuz.coordinator.v1.LobbyPort}
 */
proto.openpuz.coordinator.v1.LobbyPort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openpuz.coordinator.v1.LobbyPort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openpuz.coordinator.v1.LobbyPort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openpuz.coordinator.v1.LobbyPort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openpuz.coordinator.v1.LobbyPort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openpuz.coordinator.v1.LobbyPort.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openpuz.coordinator.v1.LobbyPort} returns this
 */
proto.openpuz.coordinator.v1.LobbyPort.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.openpuz.coordinator.v1.LobbyPort.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openpuz.coordinator.v1.LobbyPort} returns this
 */
proto.openpuz.coordinator.v1.LobbyPort.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.openpuz.coordinator.v1.GameType = {
  GAME_TYPE_INVALID: 0,
  GAME_TYPE_SUDOKU: 1
};

goog.object.extend(exports, proto.openpuz.coordinator.v1);
