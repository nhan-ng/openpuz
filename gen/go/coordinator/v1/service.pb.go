// Code generated by protoc-gen-go. DO NOT EDIT.
// source: coordinator/v1/service.proto

package coordinatorv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameType int32

const (
	GameType_GAME_TYPE_INVALID GameType = 0
	GameType_GAME_TYPE_SUDOKU  GameType = 1
)

var GameType_name = map[int32]string{
	0: "GAME_TYPE_INVALID",
	1: "GAME_TYPE_SUDOKU",
}

var GameType_value = map[string]int32{
	"GAME_TYPE_INVALID": 0,
	"GAME_TYPE_SUDOKU":  1,
}

func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}

func (GameType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c864f157b135d4cc, []int{0}
}

type CreateLobbyRequest struct {
	GameType             GameType `protobuf:"varint,1,opt,name=game_type,json=gameType,proto3,enum=openpuz.coordinator.v1.GameType" json:"game_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLobbyRequest) Reset()         { *m = CreateLobbyRequest{} }
func (m *CreateLobbyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLobbyRequest) ProtoMessage()    {}
func (*CreateLobbyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c864f157b135d4cc, []int{0}
}

func (m *CreateLobbyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLobbyRequest.Unmarshal(m, b)
}
func (m *CreateLobbyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLobbyRequest.Marshal(b, m, deterministic)
}
func (m *CreateLobbyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLobbyRequest.Merge(m, src)
}
func (m *CreateLobbyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLobbyRequest.Size(m)
}
func (m *CreateLobbyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLobbyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLobbyRequest proto.InternalMessageInfo

func (m *CreateLobbyRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_GAME_TYPE_INVALID
}

type CreateLobbyResponse struct {
	Lobby                *Lobby   `protobuf:"bytes,1,opt,name=lobby,proto3" json:"lobby,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLobbyResponse) Reset()         { *m = CreateLobbyResponse{} }
func (m *CreateLobbyResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLobbyResponse) ProtoMessage()    {}
func (*CreateLobbyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c864f157b135d4cc, []int{1}
}

func (m *CreateLobbyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLobbyResponse.Unmarshal(m, b)
}
func (m *CreateLobbyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLobbyResponse.Marshal(b, m, deterministic)
}
func (m *CreateLobbyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLobbyResponse.Merge(m, src)
}
func (m *CreateLobbyResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLobbyResponse.Size(m)
}
func (m *CreateLobbyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLobbyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLobbyResponse proto.InternalMessageInfo

func (m *CreateLobbyResponse) GetLobby() *Lobby {
	if m != nil {
		return m.Lobby
	}
	return nil
}

type Lobby struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GameType             GameType     `protobuf:"varint,2,opt,name=game_type,json=gameType,proto3,enum=openpuz.coordinator.v1.GameType" json:"game_type,omitempty"`
	Ports                []*LobbyPort `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	Address              string       `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	NodeName             string       `protobuf:"bytes,5,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Lobby) Reset()         { *m = Lobby{} }
func (m *Lobby) String() string { return proto.CompactTextString(m) }
func (*Lobby) ProtoMessage()    {}
func (*Lobby) Descriptor() ([]byte, []int) {
	return fileDescriptor_c864f157b135d4cc, []int{2}
}

func (m *Lobby) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lobby.Unmarshal(m, b)
}
func (m *Lobby) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lobby.Marshal(b, m, deterministic)
}
func (m *Lobby) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lobby.Merge(m, src)
}
func (m *Lobby) XXX_Size() int {
	return xxx_messageInfo_Lobby.Size(m)
}
func (m *Lobby) XXX_DiscardUnknown() {
	xxx_messageInfo_Lobby.DiscardUnknown(m)
}

var xxx_messageInfo_Lobby proto.InternalMessageInfo

func (m *Lobby) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Lobby) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_GAME_TYPE_INVALID
}

func (m *Lobby) GetPorts() []*LobbyPort {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Lobby) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Lobby) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type LobbyPort struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LobbyPort) Reset()         { *m = LobbyPort{} }
func (m *LobbyPort) String() string { return proto.CompactTextString(m) }
func (*LobbyPort) ProtoMessage()    {}
func (*LobbyPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_c864f157b135d4cc, []int{3}
}

func (m *LobbyPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LobbyPort.Unmarshal(m, b)
}
func (m *LobbyPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LobbyPort.Marshal(b, m, deterministic)
}
func (m *LobbyPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LobbyPort.Merge(m, src)
}
func (m *LobbyPort) XXX_Size() int {
	return xxx_messageInfo_LobbyPort.Size(m)
}
func (m *LobbyPort) XXX_DiscardUnknown() {
	xxx_messageInfo_LobbyPort.DiscardUnknown(m)
}

var xxx_messageInfo_LobbyPort proto.InternalMessageInfo

func (m *LobbyPort) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LobbyPort) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterEnum("openpuz.coordinator.v1.GameType", GameType_name, GameType_value)
	proto.RegisterType((*CreateLobbyRequest)(nil), "openpuz.coordinator.v1.CreateLobbyRequest")
	proto.RegisterType((*CreateLobbyResponse)(nil), "openpuz.coordinator.v1.CreateLobbyResponse")
	proto.RegisterType((*Lobby)(nil), "openpuz.coordinator.v1.Lobby")
	proto.RegisterType((*LobbyPort)(nil), "openpuz.coordinator.v1.LobbyPort")
}

func init() { proto.RegisterFile("coordinator/v1/service.proto", fileDescriptor_c864f157b135d4cc) }

var fileDescriptor_c864f157b135d4cc = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x5f, 0x4f, 0xe2, 0x40,
	0x14, 0xc5, 0xb7, 0x0b, 0xdd, 0xa5, 0x97, 0x2c, 0xe9, 0xce, 0xfe, 0x49, 0x83, 0x9a, 0x60, 0x9f,
	0x08, 0x26, 0x25, 0x94, 0x07, 0x9e, 0x8c, 0xe1, 0x5f, 0x08, 0x8a, 0xd8, 0x14, 0x30, 0xd1, 0x97,
	0xa6, 0xd0, 0x2b, 0x21, 0xb1, 0x9d, 0x3a, 0x2d, 0x8d, 0xf8, 0x11, 0xfd, 0x54, 0xa6, 0x53, 0x91,
	0x12, 0xc1, 0xe8, 0xdb, 0xed, 0xe9, 0x99, 0x33, 0xbf, 0x93, 0xb9, 0x70, 0x38, 0xa3, 0x94, 0x39,
	0x0b, 0xcf, 0x0e, 0x29, 0xab, 0x46, 0xb5, 0x6a, 0x80, 0x2c, 0x5a, 0xcc, 0x50, 0xf3, 0x19, 0x0d,
	0x29, 0xf9, 0x4f, 0x7d, 0xf4, 0xfc, 0xe5, 0x93, 0x96, 0x72, 0x69, 0x51, 0x4d, 0x1d, 0x01, 0x69,
	0x33, 0xb4, 0x43, 0x1c, 0xd0, 0xe9, 0x74, 0x65, 0xe2, 0xc3, 0x12, 0x83, 0x90, 0x9c, 0x82, 0x34,
	0xb7, 0x5d, 0xb4, 0xc2, 0x95, 0x8f, 0x8a, 0x50, 0x12, 0xca, 0x05, 0xbd, 0xa4, 0xed, 0x4e, 0xd0,
	0x7a, 0xb6, 0x8b, 0xe3, 0x95, 0x8f, 0x66, 0x6e, 0xfe, 0x3a, 0xa9, 0xe7, 0xf0, 0x67, 0x2b, 0x34,
	0xf0, 0xa9, 0x17, 0x20, 0xa9, 0x83, 0x78, 0x1f, 0x0b, 0x3c, 0x31, 0xaf, 0x1f, 0xed, 0x4b, 0x4c,
	0x4e, 0x25, 0x5e, 0xf5, 0x59, 0x00, 0x91, 0x0b, 0x84, 0x40, 0xd6, 0xb3, 0xdd, 0x84, 0x47, 0x32,
	0xf9, 0xbc, 0x0d, 0xfa, 0xfd, 0xab, 0xa0, 0xa4, 0x01, 0xa2, 0x4f, 0x59, 0x18, 0x28, 0x99, 0x52,
	0xa6, 0x9c, 0xd7, 0x8f, 0x3f, 0x24, 0x32, 0x28, 0x0b, 0xcd, 0xc4, 0x4f, 0x14, 0xf8, 0x69, 0x3b,
	0x0e, 0xc3, 0x20, 0x50, 0xb2, 0x1c, 0x67, 0xfd, 0x49, 0x0e, 0x40, 0xf2, 0xa8, 0x83, 0x16, 0x47,
	0x15, 0xf9, 0xbf, 0x5c, 0x2c, 0x0c, 0x6d, 0x17, 0xd5, 0x3a, 0x48, 0x6f, 0x51, 0x3b, 0xfb, 0x10,
	0xc8, 0xc6, 0x17, 0xf0, 0x2a, 0xa2, 0xc9, 0xe7, 0x4a, 0x03, 0x72, 0x6b, 0x74, 0xf2, 0x0f, 0x7e,
	0xf7, 0x9a, 0x97, 0x5d, 0x6b, 0x7c, 0x63, 0x74, 0xad, 0xfe, 0xf0, 0xba, 0x39, 0xe8, 0x77, 0xe4,
	0x6f, 0xe4, 0x2f, 0xc8, 0x1b, 0x79, 0x34, 0xe9, 0x5c, 0x5d, 0x4c, 0x64, 0x41, 0x7f, 0x84, 0x42,
	0x7b, 0xd3, 0xa3, 0x69, 0xf4, 0xc9, 0x1d, 0xe4, 0x53, 0x0f, 0x43, 0x2a, 0xfb, 0xfa, 0xbe, 0x5f,
	0x89, 0xe2, 0xc9, 0xa7, 0xbc, 0xc9, 0x4b, 0xb7, 0xce, 0xa0, 0x38, 0xa3, 0xee, 0x9e, 0x13, 0x2d,
	0x39, 0x45, 0x65, 0xc4, 0xdb, 0x69, 0x08, 0xb7, 0xbf, 0x52, 0x9e, 0xa8, 0x36, 0xfd, 0xc1, 0xb7,
	0xb6, 0xfe, 0x12, 0x00, 0x00, 0xff, 0xff, 0x26, 0xe5, 0x90, 0xbe, 0xd5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoordinatorAPIClient is the client API for CoordinatorAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoordinatorAPIClient interface {
	CreateLobby(ctx context.Context, in *CreateLobbyRequest, opts ...grpc.CallOption) (*CreateLobbyResponse, error)
}

type coordinatorAPIClient struct {
	cc *grpc.ClientConn
}

func NewCoordinatorAPIClient(cc *grpc.ClientConn) CoordinatorAPIClient {
	return &coordinatorAPIClient{cc}
}

func (c *coordinatorAPIClient) CreateLobby(ctx context.Context, in *CreateLobbyRequest, opts ...grpc.CallOption) (*CreateLobbyResponse, error) {
	out := new(CreateLobbyResponse)
	err := c.cc.Invoke(ctx, "/openpuz.coordinator.v1.CoordinatorAPI/CreateLobby", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoordinatorAPIServer is the server API for CoordinatorAPI service.
type CoordinatorAPIServer interface {
	CreateLobby(context.Context, *CreateLobbyRequest) (*CreateLobbyResponse, error)
}

func RegisterCoordinatorAPIServer(s *grpc.Server, srv CoordinatorAPIServer) {
	s.RegisterService(&_CoordinatorAPI_serviceDesc, srv)
}

func _CoordinatorAPI_CreateLobby_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLobbyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordinatorAPIServer).CreateLobby(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpuz.coordinator.v1.CoordinatorAPI/CreateLobby",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordinatorAPIServer).CreateLobby(ctx, req.(*CreateLobbyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoordinatorAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpuz.coordinator.v1.CoordinatorAPI",
	HandlerType: (*CoordinatorAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLobby",
			Handler:    _CoordinatorAPI_CreateLobby_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coordinator/v1/service.proto",
}
